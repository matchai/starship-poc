name: CI

on: [push, pull_request]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest 
          - windows-latest
        version:
          - stable
          - nightly

    name: Test ${{ matrix.os }} ${{ matrix.version }}
    runs-on: ${{ matrix.os }} 

    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2

      - name: Setup | Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }} 
          profile: minimal
          override: true
          default: true

      - name: Setup | Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile

      - name: Setup | Cache Build
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-${{ matrix.version }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build | Check
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: check
          args: --release --all --bins --examples --tests --all-features

      - name: Build | Test
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --release --all-features --no-fail-fast --lib -- --nocapture

      - name: Cleanup | Clean cache
          run: |
            cargo install cargo-cache --no-default-features --features ci-autoclean
            cargo-cache

  test-cross:
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf

    name: Test ${{ matrix.target }}
    runs-on: ubuntu-latest

    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2

      - name: Setup | Rust Toolchain [${{ matrix.target }}]
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true
          default: true

      - name: Setup | Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile

      - name: Setup | Cache Build
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build | Check
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: check
          args: --target ${{ matrix.target }} --release --all --bins --examples --tests --all-features

      - name: Build | Test
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --target ${{ matrix.target }} --release --all-features --no-fail-fast --lib -- --nocapture

      - name: Cleanup | Clean cache
          run: |
            cargo install cargo-cache --no-default-features --features ci-autoclean
            cargo-cache
